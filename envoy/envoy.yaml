static_resources:
  listeners:
    - address:
        socket_address: { address: 0.0.0.0, port_value: 50051 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: http2
                stat_prefix: ingress_grpc
                http2_protocol_options: {}
                common_http_protocol_options:
                  idle_timeout: { seconds: 600, nanos: 0 }
                  max_connection_duration: { seconds: 3600, nanos: 0 }
                drain_timeout: { seconds: 10, nanos: 0 }
                route_config:
                  name: service_route
                  virtual_hosts:
                    - name: service_host
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: service_cluster
                            timeout:
                              seconds: 0
                              nanos: 0
                http_filters:
                  - name: envoy.filters.http.grpc_stats
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_stats.v3.FilterConfig
                      stats_for_all_methods: true
                      enable_upstream_stats: true
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: service_cluster
      connect_timeout: 0.25s
      type: strict_dns
      dns_refresh_rate: 10s
      lb_policy: round_robin
      http2_protocol_options:
        connection_keepalive:
          interval: { seconds: 3, nanos: 0 }
          timeout: { seconds: 1, nanos: 0 }
      # health_checks:
      # - timeout: 1s
      #   interval: 2s
      #   unhealthy_threshold: 3
      #   initial_jitter: 1s
      #   healthy_threshold: 1
      #   tcp_health_check: {}
      #   always_log_health_check_failures: true
      load_assignment:
        cluster_name: service_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: server-1, port_value: 50051 }
admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
